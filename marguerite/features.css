h1 {
    text-align: center;
    margin-bottom: 20px;
  }
  
  .MxContainer,
  .MyContainer {
    display: flex;
    justify-content: space-between; /* Aligns items side by side */
    width: 90%; /* Makes the container take up 90% of the browser width */
    margin: 10px;
  }
  
  .MxPerson,
  .MyPerson {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    transition: transform 0.1s; /* Smooth transition for rotation */
  }
  
  .MLaxis {
    position: absolute;
    top: 45%; /* Raised the arrow vertically */
    left: 50%; /* Position arrow in the center of the person */
    width: 150px; /* Increased width of the arrow */
    height: 4px; /* Thickness of the arrow line */
    background-color: red;
    transform-origin: center;
    transform: translateX(-50%); /* Center the arrow line */
  }

  .APaxisFront {
    position: absolute;
    top: 45%; /* Raised the arrow vertically */
    left: 42%; /* Position arrow in the center of the person */
    width: 100px; /* Increased width of the arrow */
    height: 4px; /* Thickness of the arrow line */
    background-color: red;
    transform-origin: center;
    transform: translateX(-50%) rotate(-45deg); /* Center the arrow line */
  }

  .APaxisBack {
    position: absolute;
    top: 30%; /* Raised the arrow vertically */
    left: 60%; /* Position arrow in the center of the person */
    width: 100px; /* Increased width of the arrow */
    height: 4px; /* Thickness of the arrow line */
    background-color: red;
    transform-origin: center;
    transform: translateX(-50%) rotate(-45deg); /* Center the arrow line */
  }
  
  .MxView,
  .MyView,
  .MxText,
  .MyText {
    display: flex;
    flex-direction: column;
    align-items: center;
    flex: 1; /* Allow both views to take equal space within the container */
  }
  
  .MxText,
  .MyText {
    margin-left: 30px; /* Spacing between the text and views */
    width: 35%; /* Set width for the text section */
  }
  
  
  